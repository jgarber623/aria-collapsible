/*!
 *  aria-collapsible v5.0.0
 *
 *  A lightweight, dependency-free JavaScript module for generating progressively-enhanced collapsible regions using ARIA States and Properties.
 *
 *  Source code available at: https://github.com/jgarber623/aria-collapsible
 *
 *  (c) 2015-present Jason Garber (https://sixtwothree.org)
 *
 *  aria-collapsible may be freely distributed under the MIT license.
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Collapsible=e()}(this,(function(){"use strict";const t=(t,e)=>t.getAttribute(e),e=(t,e,i)=>t.setAttribute(e,i),i=(t,e)=>t.removeAttribute(e),o="aria-controls",n="aria-expanded",s="hidden";return class{constructor(e){const i=document.getElementById(t(e,o));e&&i&&(this.control=e,this.region=i,this.setup=this.#t,this.teardown=this.#e)}#i=()=>((o,c)=>{const r="true"!==t(o,n);e(o,n,r),r?i(c,s):e(c,s,!0)})(this.control,this.region);#t=()=>{const{control:t,region:o}=this;((t,o)=>{e(t,n,!1),i(t,s),e(o,s,!0)})(t,o),t.addEventListener("click",this.#i.bind(this)),this.toggle=this.#i};#e=()=>{const{control:t,region:o}=this;((t,o)=>{e(t,n,!0),e(t,s,!0),i(o,s)})(t,o),t.removeEventListener("click",this.#i),this.toggle=void 0}}}));

/*!
 *  aria-collapsible v4.0.0
 *
 *  A lightweight, dependency-free JavaScript module for generating progressively-enhanced collapsible regions using ARIA States and Properties.
 *
 *  Source code available at: https://github.com/jgarber623/aria-collapsible
 *
 *  (c) 2015-present Jason Garber (https://sixtwothree.org)
 *
 *  aria-collapsible may be freely distributed under the MIT license.
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).Collapsible=t()}(this,(function(){"use strict";const e=(e,t)=>e.removeAttribute(t),t=(e,t,i)=>e.setAttribute(t,i);return class{constructor(e){const t=document.getElementById(e.getAttribute("aria-controls"));e&&t&&(this.control=e,this.region=t,this.setup=this.#e,this.teardown=this.#t)}#i=e=>{e.preventDefault(),this.#n()};#n=(i=this.control,n=this.region)=>{const o="true"!==i.getAttribute("aria-expanded");t(i,"aria-expanded",o),o?(e(n,"aria-hidden"),n.focus()):t(n,"aria-hidden",!0)};#e=(i=this.control,n=this.region)=>{t(i,"aria-expanded",!1),e(i,"aria-hidden"),t(n,"aria-hidden",!0),t(n,"tabindex",-1),i.addEventListener("click",this.#i),this.toggle=this.#n};#t=(i=this.control,n=this.region)=>{t(i,"aria-expanded",!0),t(i,"aria-hidden",!0),e(n,"aria-hidden"),e(n,"tabindex"),i.removeEventListener("click",this.#i),this.toggle=void 0}}}));
